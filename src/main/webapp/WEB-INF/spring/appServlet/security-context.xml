<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
<!-- 스프링 시큐리티 AOP기능
intercept 라는 태그를 사용하는 것이 핵심, 주로 정적인 static,resources 폴더안의 파일들은 보안해제시킴 
-->
<security:http pattern="/**/*.js" security="none"/>
<security:http pattern="/**/*.css" security="none"/>
<security:http pattern="/**/img/*" security="none"/>
<!-- 스프링 시큐리티 기본설정, use-expresstions 자바 EL(${})을 사용한다는 뜼-->
<security:http auto-config="true" use-expressions="true">
	<security:session-management invalid-session-url="/">
	<security:concurrency-control max-sessions="3" error-if-maximum-exceeded="false"/>
	</security:session-management>
	<!-- 여기서부터 intercept 사용 -->
	<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN)"/>
	<security:intercept-url pattern="/admin/*_insert" access="hasRole('ROLE_USER','ROLE_ADMIN)"/>
	<security:intercept-url pattern="/admin/*_insert_form" access="hasRole('ROLE_USER','ROLE_ADMIN)"/>
	<security:intercept-url pattern="/admin/*_update" access="hasRole('ROLE_USER','ROLE_ADMIN)"/>
	<security:intercept-url pattern="/admin/*_update_form" access="hasRole('ROLE_USER','ROLE_ADMIN)"/>
	<security:intercept-url pattern="/admin/*_delete" access="hasRole('ROLE_USER','ROLE_ADMIN)"/>
	<security:intercept-url pattern="/admin/member/**" access="hasRole('ROLE_USER','ROLE_ADMIN)"/>
	<security:intercept-url pattern="/**" access="permitAll"/>
	<security:csrf disabled="true"/>
	<!-- 접근 허용이 안 된 사용자들을 체크해서 로그인 폼으로 이동하게 설정 -->
	<security:form-login 
		login-page="/login-form"
		login-processing-url="/login"
		always-use-default-target="true"
		default-target-url="/login_seccess"
		authentication-failure-url="/login_form?msg=fail"
		username-parameter="user_id"
		password-parameter="user_pw"
		/>
		<security:remember-me key="remember-key" token-validity-seconds="604800" remember-me-parameter="remember-me-parameter" />
		<security:logout logout-url="logout" logout-success-url="/" invalidate-session="true" delete-cookies="JSESSIONID,SPRING-SECURITY-REMEMBER-COOKIE"/>		
	
</security:http>
<security:authentication-manager>
	<security:authentication-provider>
	<security:jdbc-user-service data-source-ref="dataSource" 
	users-by-username-query="select user_id as no,user_pw as password, enabled from tbl_member where user_id = ?"
	authorities-by-username-query="select user_id as no,levels as authority from tbl_member where user_id = ?"
	/>
	</security:authentication-provider>
</security:authentication-manager>
</beans>
